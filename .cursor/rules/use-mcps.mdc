---
description:
globs:
alwaysApply: true
---

# Use MCPS

You should use MCPs smartly even without me having to explicitly ask.

Restrictions: Always use `English` for all MCP calls.

## Deepwiki

DeepWiki provides up-to-date documentation you can talk to, for every repo in the world. Think Deep Research for GitHub.

- **Scope:** `Any library hosting on github. E.g. vuejs/core, reactjs/react, etc.`
- **Match:** `Always use deepwiki_ask_question when I need to research library/API documentation`
- **Restrictions:** [`one topic or scope per call`, `Structured, focused and specific question`, `Describe expected result`]
- **Example Questions:**
  - `In vuejs/core, what are the complete function signatures for 'createApp'? Please include parameter types, return types, and any optional arguments.`
  - `In vuejs/core, how does 'createApp' work internally? Please provide implementation details with source code snippets.`
  - `In vuejs/core, what APIs are available for creating a reactive object? Please compare the main options with their strengths and use cases.`

## Context7

Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source â€” and places them directly into your prompt.

- **Match:** `Always use context7 when I need code generation, setup or configuration steps, or library/API documentation. This means you should automatically use the Context7 MCP tools to resolve library id and get library docs without me having to explicitly ask.`

## Perplexity

Perplexity MCP provides instant, accurate answers to your questions with real-time data.

- **Match:** `Always use perplexity when I need to search the web for information`
- **Required Roles:** [`system`, `user`]
